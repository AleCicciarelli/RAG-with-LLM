def generate(state: State):
    prompt_with_explanation = f"""
    Your task is to answer questions based on structured CSV data, by reasoning using SQL-like operations.
    When you receive a user question and the top-k relevant documents (each one representing a table or a view), follow these steps:

    1. **Identify the required information**: What is being asked?
    2. **Locate the relevant tables**: Find in the documents the tables or entities that contain the required data.
    3. **Determine joins**:
       - If data is spread across multiple tables, identify common keys.
       - Explain which tables need to be joined and on which columns.
    4. **Apply filters and projections**:
       - Use WHERE clauses to filter rows (e.g., student name, course title).
       - Use SELECT to retrieve only the needed fields.
    5. **Construct the logic in natural language**:
       - Describe the reasoning as if you were writing an SQL query.
       - Then, answer the question using the values found in the data.
    6. **Explain your steps clearly**:
       - Always show which rules you applied (JOIN, SELECT, WHERE).
       - Show intermediate steps if needed.

    Always provide the final answer **and** the reasoning that led to it.

    Your answer must follow this structure, but return it as a string representation of a JSON:

    {{
        "answer": ["<answer_1>", "<answer_2>", "..."],  
        "explanation": [  
            "<step_1_explanation>",
            "<step_2_explanation>"
        ]
    }}

    ### IMPORTANT ###
    - The output must be a valid JSON object, without extra text.

    ### Example ###
    {{
        "answer": [
            "Computer Science"
        ],
        "explanation": [
            "First, I joined the teachers table with the courses table on the teacher_id column.",
            "Then, I filtered the rows where the course title was 'Computer Science'."
        ]
    }}

    Question: {state["question"]}
    Given this question and the context provided , provide the answer including the explanation on how you get the information: 
    - the steps taken to query the data
    """
